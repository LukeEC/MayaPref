global proc shelf_CGCG () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "testFollowHeadforCos(2,0.382);" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "testFollowHeadforCos(2,0.382);" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "testA" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "testFollowHeadforCos(2,0.382);" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "testBreathforCos();" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "testBreathforCos();" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "testC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "testBreathforCos();" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "$al=testFollow($selsA,$selsB,\"follow_head_ly\",1,0.382);\n\nproc st..." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "$al=testFollow($selsA,$selsB,\"follow_head_ly\",1,0.382);\n\nproc st..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "testCoHeadKey" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "$al=testFollow($selsA,$selsB,\"follow_head_ly\",1,0.382);\n\nproc string testFollow(string $selsA[],string $selsB[],string $aln,float $to,float $index){\n\t$al=`animLayer $aln`;\n\t$attrs={\"rx\",\"ry\",\"rz\"};\n\t\n\t$vs=1.0;\n\t$to2=0;\n\tfor($i=0;$i<`size($selsB)`;$i++){\n\t\t$vs=$index*$vs;\n\t\t$to2=$to2+$to;\n\t\tfor($attr in $attrs){\n\t\t\tcpKeywithLayer($al,$selsA[0],$attr,$selsB[$i],$attr,$to2,$vs);\n\t\t\t}\n\t\t}\n\treturn $al;\n\t}\n\nproc cpKeywithLayer(string $al,string $sObj,string $sAttr,string $tObj,string $tAttr,float $to,float $vs){\n\t/*\n\t$al:animLayer\n\t$to:timeOffset\n\t$vs:valueScale\n\t*/\n\t$source=($sObj+\".\"+$sAttr);\n\t$target=($tObj+\".\"+$tAttr);\n\tanimLayer -e -at $target $al;\n\t$trng=selTime();\n\tfloat $cv[];\n\n\tif(!`size $trng`){\n\tcopyKey $source;\n\t$cv=`keyframe -q -vc $source`;\n\t}else{\n\tcopyKey -t $trng $source;\n\t$cv=`keyframe -t $trng -q -vc $source`;\n\t}\n\tpasteKey -option \"replace\" -al $al -to $to -vo (-1*$cv[0]) $target;\n\t$testX=`animLayer -q -fcv $target $al`;\n\tscaleKey -valueScale $vs $testX;\n\t}\n\t\nproc string selTime(){\n\tstring $trng;\n\tglobal string $gPlayBackSlider;\n\tif(`timeControl -q -rv $gPlayBackSlider`){\n\t\t$ta=`timeControl -q -ra $gPlayBackSlider`;\n\t\t$trng=($ta[0]+\":\"+$ta[1]);\n\t}else{\n\t\tfloat $ta[]=`keyframe -q -tc -sl`;\n\t\t$ta=floatArrayRemoveDuplicates($ta,0);\n\t\t$ta=`sort $ta`;\n\t\t$n=(`size($ta)`-1);\n\t\tif($n>0) $trng=($ta[0]+\":\"+$ta[$n]);\n\t\t}\n\treturn $trng;\n\t}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "evaluationManager -mode parallel;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "evaluationManager -mode parallel;" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "parallel" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "evaluationManager -mode parallel;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "$sels=`ls -sl`;\nrpback($sels[0]);\nproc rpback(string $rp){\n    \n    refresh -suspend 1;\n    $target=getParentConstraintTarget();\n    select -r $target;\n    BakeSimulation;\n    deleteConstraint();\n    parentConstraint $rp $target;\n    delete $rp;\n    refresh -suspend 0;\n    }\n    \nproc string[] getParentConstraintTarget(){\n\n    string $cons[]=`listConnections -t \"constraint\"`;\n    $son=`listConnections -t \"transform\" ($cons[0]+\".constraintRotatePivot\")`;\n    return $son;\n    }\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "$sels=`ls -sl`;\nrpback($sels[0]);\nproc rpback(string $rp){\n    \n..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "rpBack" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "$sels=`ls -sl`;\nrpback($sels[0]);\nproc rpback(string $rp){\n    \n    refresh -suspend 1;\n    $target=getParentConstraintTarget();\n    select -r $target;\n    BakeSimulation;\n    deleteConstraint();\n    parentConstraint $rp $target;\n    delete $rp;\n    refresh -suspend 0;\n    }\n    \nproc string[] getParentConstraintTarget(){\n\n    string $cons[]=`listConnections -t \"constraint\"`;\n    $son=`listConnections -t \"transform\" ($cons[0]+\".constraintRotatePivot\")`;\n    return $son;\n    }\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "$sels=`ls -sl`;\nrpLoc($sels[0]);\nproc rpLoc(string $sel){\n    \n    $part=match(\"^[^\\.]*\",$sel);\n    $locs=`spaceLocator -n ($part+\"_rp\")`;\n    refresh -suspend 1;\n    parentConstraint $sel $locs;\n    BakeSimulation;\n    deleteConstraint();\n    parentConstraint $locs $sel;\n    refresh -suspend 0;\n    }\n    \nproc deleteConstraint(){\n\n    string $cons[]=`listConnections -t \"constraint\"`;\n    delete $cons;\n    }" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "$sels=`ls -sl`;\nrpLoc($sels[0]);\nproc rpLoc(string $sel){\n    \n ..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "rpLoc" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "$sels=`ls -sl`;\nrpLoc($sels[0]);\nproc rpLoc(string $sel){\n    \n    $part=match(\"^[^\\.]*\",$sel);\n    $locs=`spaceLocator -n ($part+\"_rp\")`;\n    refresh -suspend 1;\n    parentConstraint $sel $locs;\n    BakeSimulation;\n    deleteConstraint();\n    parentConstraint $locs $sel;\n    refresh -suspend 0;\n    }\n    \nproc deleteConstraint(){\n\n    string $cons[]=`listConnections -t \"constraint\"`;\n    delete $cons;\n    }" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\n    refresh -suspend 1;\n    $cons=`parentConstraint $selsA[0] $selsB[0]`;\n    BakeSimulation;\n    delete $cons;\n    parentConstraint $locs $sel;\n    refresh -suspend 0;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\n    refresh -suspend 1;\n    $cons=`parentConstraint $selsA[0] $..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "bkSnap" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "\n    refresh -suspend 1;\n    $cons=`parentConstraint $selsA[0] $selsB[0]`;\n    BakeSimulation;\n    delete $cons;\n    parentConstraint $locs $sel;\n    refresh -suspend 0;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\n    refresh -suspend 1;\n\n    BakeSimulation;\n\n    refresh -suspend 0;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\n    refresh -suspend 1;\n\n    BakeSimulation;\n\n    refresh -susp..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "bk" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "\n    refresh -suspend 1;\n\n    BakeSimulation;\n\n    refresh -suspend 0;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
