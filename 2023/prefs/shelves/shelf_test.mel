global proc shelf_test () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "list same name" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "$all=`ls`;\nif(`objExists \"sameNameSet\"`)\n    delete \"sameNameSet..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "lsSN" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "$all=`ls`;\nif(`objExists \"sameNameSet\"`)\n    delete \"sameNameSet\";\nif(!`objExists \"sameNameSet\"`)\n    sets -em -n \"sameNameSet\";\n\n\nfor ($i=0; $i<`size($all)`;$i++){ \n    if(`gmatch $all[$i] \"*|*\"`) sets -add \"sameNameSet\" $all[$i];\n    }\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "reName" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "string $pad;\n$sels=`ls -sl`;\nfor ($i=0; $i<`size($sels)`;$i++){ ..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "reName" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "string $pad;\n$sels=`ls -sl`;\nfor ($i=0; $i<`size($sels)`;$i++){ \n    $child=`listRelatives -c $sels[$i]`;\n    for ($j=0; $j<`size($child)`;$j++){ \n        $pad = `python (\"'%02d' % \"+($j+1))`; //預設為十位 百位則把這句02改成03 \n        rename $child[$j] ($sels[$i]+\"_\"+$pad);\n        }\n    }" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "batchExportSelectedFBX();\nproc batchExportSelectedFBX(){\n    string $sn = `file -q -sn`;\n    string $dir = `match \"^.*/\" $sn`;\n    string $dirF=($dir+\"fbx\");\n    $work=`file -q -ex $dirF`;\n    if($work==1){\n        $sels=`ls -sl`;    \n        string $obj;\n        \n        for($i=0;$i<`size($sels)`;$i++){\n            $obj=$sels[$i];\n            select -r $obj;\n            //print ($obj+(\"\\n\"));\n            file -force -options \"v=0;\" -typ \"FBX export\" -pr -es ($dirF+\"/\"+$obj);\n            }\n    }else{\n        print (\"找不到:\"+$dirF);\n    }\n    }" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "batchExportSelectedFBX();\nproc batchExportSelectedFBX(){\n    str..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "bExpFBX" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "batchExportSelectedFBX();\nproc batchExportSelectedFBX(){\n    string $sn = `file -q -sn`;\n    string $dir = `match \"^.*/\" $sn`;\n    string $dirF=($dir+\"fbx\");\n    $work=`file -q -ex $dirF`;\n    if($work==1){\n        $sels=`ls -sl`;    \n        string $obj;\n        \n        for($i=0;$i<`size($sels)`;$i++){\n            $obj=$sels[$i];\n            select -r $obj;\n            //print ($obj+(\"\\n\"));\n            file -force -options \"v=0;\" -typ \"FBX export\" -pr -es ($dirF+\"/\"+$obj);\n            }\n    }else{\n        print (\"找不到:\"+$dirF);\n    }\n    }" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
