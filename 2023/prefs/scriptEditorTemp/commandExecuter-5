// 假設A物體和B物體的名稱
string $A_object = "pCube1";
string $B_object = "pCone1";

// 獲取A物體和B物體的世界矩陣
float $A_matrix[16] = `xform -q -ws -m $A_object`;
float $B_matrix[16] = `xform -q -ws -m $B_object`;

// 將A物體的位置和旋轉提取出來
vector $A_position = <<$A_matrix[12], $A_matrix[13], $A_matrix[14]>>;
vector $A_rotation = `xform -q -ws -ro $A_object`;

// 將B物體的位置提取出來
vector $B_position = <<$B_matrix[12], $B_matrix[13], $B_matrix[14]>>;

// 計算A物體相對於B物體的位置
vector $relative_position = $A_position - $B_position;

// 計算鏡像位置（假設在X軸上鏡像）
vector $mirror_position = <<(-1*$relative_position.x), ($relative_position.y), ($relative_position.z)>>;

// 計算鏡像位置在世界坐標系中的位置
vector $new_position = $B_position + $mirror_position;

// 計算鏡像旋轉（假設在X軸上鏡像，需要反轉Y和Z軸旋轉）
vector $mirror_rotation = <<$A_rotation.x, (-1*$A_rotation.y), (-1*$A_rotation.z)>>;

// 將新的位置和旋轉應用到A物體
xform -ws -t ($new_position.x) ($new_position.y) ($new_position.z) $A_object;
xform -ws -ro ($mirror_rotation.x) ($mirror_rotation.y) ($mirror_rotation.z) $A_object;