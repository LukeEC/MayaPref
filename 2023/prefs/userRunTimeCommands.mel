//Maya Preference 2023 (Release 1)
//
//

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackMoveKeys \"convergeRight\";")
	key_convergeR;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -nurbsSurfaces 0 modelPanel1;\nmodelEditor -e -nurbsSurfaces 0 modelPanel2;\nmodelEditor -e -nurbsSurfaces 0 modelPanel3;\nmodelEditor -e -nurbsSurfaces 0 modelPanel4;\n")
	display_surface_0;

runTimeCommand
	-label ""
	-annotation "test"
	-longAnnotation ""
	-category "Custom Scripts.Luke_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("source \"byLuke/dingdingTool.mel\";\ndingdingTool;\n\n")
	ding;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -wos 0 modelPanel1;\nmodelEditor -e -wos 0 modelPanel2;\nmodelEditor -e -wos 0 modelPanel3;\nmodelEditor -e -wos 0 modelPanel4;")
	display_wireframe_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -polymeshes 1 modelPanel1;\nmodelEditor -e -polymeshes 1 modelPanel2;\nmodelEditor -e -polymeshes 1 modelPanel3;\nmodelEditor -e -polymeshes 1 modelPanel4;")
	display_polygon_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("channelBoxCommand -lock;")
	channel_selLock_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("//")
	stopCtrlV;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("keyTangent -e -global -itt linear;\nkeyTangent -e -global -ott step;")
	Animation_blocking_mode;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("// Select the objects\n\nstring $myObjects [] = ` ls -sl`;\n\nstring $myAttr [] = ` channelBox -q -sma mainChannelBox`;\n\n// start the loops\n\n\nfor ($myNode in $myObjects) {\n\tfor ($myNodeAttr in $myAttr) {\n\t\tsetKeyframe ( $myNode+\".\"+$myNodeAttr );\n\t}}")
	channel_keySelAttr;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("\n$searches=`ls -sl`;\nif(`size $searches ` >0 ) $selsA=`ls -sl`;\nelse select -r $selsA ;\n")
	Grp_A;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("channelBoxCommand -break;")
	channel_breakSelConnection;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackDeleteRedundant;")
	clean_key;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("setObjectPickMask \"Joint\" false;\nsetObjectPickMask \"Surface\" false;")
	selMask_jointAndSurface_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("setObjectPickMask \"Joint\" true;\nsetObjectPickMask \"Surface\" true;")
	selMask_jointAndSurface_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("\nAnimSchoolPicker ;\n")
	Picker;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("channelBoxCommand -unmute;")
	channel_selMute_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -nurbsSurfaces 1 modelPanel1;\nmodelEditor -e -nurbsSurfaces 1 modelPanel2;\nmodelEditor -e -nurbsSurfaces 1 modelPanel3;\nmodelEditor -e -nurbsSurfaces 1 modelPanel4;\n")
	display_surface_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("hyperShadePanelGraphCommand(\"hyperShadePanel1\", \"removeSelected\");")
	hyperShade_removeSel;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-command ("\n# -----------------------------------\n# Studio Library\n# www.studiolibrary.com\n# -----------------------------------\n\nimport os\nimport sys\n    \nif not os.path.exists(r'C:\\Users\\luke\\Documents\\maya\\scripts\\studiolibrary-2.9.6.b3\\src'):\n    raise IOError(r'The source path \"C:\\Users\\luke\\Documents\\maya\\scripts\\studiolibrary-2.9.6.b3\\src\" does not exist!')\n    \nif r'C:\\Users\\luke\\Documents\\maya\\scripts\\studiolibrary-2.9.6.b3\\src' not in sys.path:\n    sys.path.insert(0, r'C:\\Users\\luke\\Documents\\maya\\scripts\\studiolibrary-2.9.6.b3\\src')\n    \nimport studiolibrary\nstudiolibrary.main()")
	Studio_Lib;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("////////140122更新可列印出目前選擇的角色，並消除之前潛在的bug//////////\n//////////////////////////////\n////////選取表情控制器////////\n//////////////////////////////\n\n\n////////壹b、篩選分辨前置檔名，定義出有哪些*:faceControls要用\n////一、要先偵測選到的角色(前置檔名)有無\"*:faceControls\" 的set，若無，則自動建立\nstring $sels[]=`ls -sl`;\nstring $faceCtrlSets[] ;\nclear $faceCtrlSets;\nfor($i=0;$i<`size $sels`;$i++){\n//----------------------------------------------------------------------------------for1開始\nif (`gmatch $sels[$i] \"*:*\"`==1){\n//--------------------------------------------------------------------if1開始\nstring $cache[];\ntokenize $sels[$i] \":\" $cache;\nselect -cl;\n//偵測,若有\"*:faceControls\"這個set就選擇；\nstring $search[]=`ls ($cache[0]+\":faceControls\")`;\nif (`size $search `==1){\nselect -r -ne ($cache[0]+\":faceControls\");\n}else{\n//----------------------------------------------------------else開始\n//否則就選擇可能的表情控制器，有選到東西的話就產生\"*:faceControls\"這個set\nstring $search[]=`ls ($cache[0] +\":face_control\")`;\nif (`size $search `>0){select -add ($cache[0] +\":face_control\");}\n\nstring $search[]=`ls ($cache[0] +\":eyebrowCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":eyebrowCtrl\");}\n\nstring $search[]=`ls ($cache[0] +\":eyes\")`;\nif (`size $search `>0){select -add ($cache[0] +\":eyes\");}\nstring $search[]=`ls ($cache[0] +\":L_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":L_eye\");}\nstring $search[]=`ls ($cache[0] +\":R_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":R_eye\");}\nstring $search[]=`ls ($cache[0] +\":M_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":M_eye\");}\nstring $search[]=`ls ($cache[0] +\":U_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":U_eye\");}\nstring $search[]=`ls ($cache[0] +\":LeyeCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":LeyeCtrl\");}\nstring $search[]=`ls ($cache[0] +\":ReyeCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":ReyeCtrl\");}\n\nstring $search[]=`ls ($cache[0] +\":mouth\")`;\nif (`size $search `>0){select -add ($cache[0] +\":mouth\");}\nstring $search[]=`ls ($cache[0] +\":mouth48\")`;\nif (`size $search `>0){select -add ($cache[0] +\":mouth48\");}\nstring $search[]=`ls ($cache[0] +\":mouthCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":mouthCtrl\");}\n\n//如果有選到東西才產生set\nstring $nowSels[]=`ls -sl`;\nif(`size $nowSels`>0){\n$createSetResult = `sets -name ($cache[0]+\":faceControls\") `;\nselect -r -ne ($cache[0]+\":faceControls\");\n}\n\n//----------------------------------------------------------else結束\n}\n//--------------------------------------------------------------------if1結束\n}\n\n//把目前選擇變數存入一個變數的各個位址中\nstring $nowSels[]=`ls -sl`;\nif(`size $nowSels`>0){$faceCtrlSets[$i]=$nowSels[0];}\n\n//如果是像道具 沒有臉部控制set，上列就會沒選到東西，該怎麼辦??位址內會有空物件\n//-->要把空的位址移除\n\n////執行到最後一次時把set選起來\nif($i<`size $sels`-1) continue;\n//要把空的位址移除\nstring $faceRemove[] = { \"\" };\nstring $faceCtrlSetsNew[] = stringArrayRemove($faceRemove, $faceCtrlSets );\nif(`size $faceCtrlSetsNew`>0){select -r -ne $faceCtrlSetsNew;}\n\n//----------------------------------------------------------------------------------for1結束\n}\n\nstring  $faceCtrlSets[]=`ls -sl`;\n\n\n\n\n////////貳b、依目前選擇到的\"*:faceControls\" 的set ,選擇其內容。\nselect -r $faceCtrlSets ;\n\nstring $sels[]=`ls -sl`;\nint $faceCtrlsAmount=`size $sels`;\n\n\n\n////////參、列印出來目前選擇的角色的\"臉\"控制器訊息\n\n//字串轉換\nstring $faceCtrlSet = stringArrayToString($faceCtrlSets, \"\"); //排列轉成字串\nstring $faceCtrlSet = substituteAllString($faceCtrlSet, \":faceControls\", \" \");//去掉後面不要的訊息\n\nprint ($faceCtrlsAmount+\"臉:\"+$faceCtrlSet) ;\n\n\n\n////////肆、如果什麼都沒選到就偵測沒有前置檔名的狀況\n\nstring $sels[]=`ls -sl`;\nif(`size $sels`==0){\n//-----------------------------if開始\nstring $search[]=`ls \"faceControls\"`;\nif (`size $search `==1){select -add faceControls ;}\n//-----------------------------if結束\n}\n")
	QselSetKeysGRP_face;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("////////140122更新可列印出目前選擇的角色，並消除之前潛在的bug//////////\n//////////////////////////////\n////////選取全身控制器////////\n//////////////////////////////\n\n\n////////壹a、篩選分辨前置檔名，定義出有哪些*:TSM2Controls要用\n////一、要先偵測選到的角色(前置檔名)有無\"*:TSM2Controls\" 的set\nstring $sels[]=`ls -sl`;\nstring $TSM2CtrlSets[] ;\nclear $TSM2CtrlSets;\nfor($i=0;$i<`size $sels`;$i++){\n//----------------------------------------------------------------------------------for1開始\nif (`gmatch $sels[$i] \"*:*\"`==1){\n//--------------------------------------------------------------------if1開始\nstring $cache[];\ntokenize $sels[$i] \":\" $cache;\nselect -cl;\n//偵測,若有\"*:TSM2Controls\"這個set就選擇；\nstring $search[]=`ls ($cache[0]+\":TSM2Controls\")`;\nif (`size $search `==1){\nselect -r -ne ($cache[0]+\":TSM2Controls\");\n}\n//--------------------------------------------------------------------if1結束\n}\n\n//把目前選擇變數存入一個變數的各個位址中\nstring $nowSels[]=`ls -sl`;\nif(`size $nowSels`>0){$TSM2CtrlSets[$i]=$nowSels[0];}\n\n\n//如果某些特殊情況 沒有全身控制set，上列就會沒選到東西，該怎麼辦??\n//位址內會有空物件-->要把空的位址移除\n\n\n////執行到最後一次時把set選起來\nif($i<`size $sels`-1) continue;\n//要把空的位址移除\nstring $itemsToRemove[] = { \"\" };\nstring $TSM2CtrlSetsNew[] = stringArrayRemove($itemsToRemove, $TSM2CtrlSets );\nif(`size $TSM2CtrlSetsNew`>0){select -r -ne $TSM2CtrlSetsNew;}\n//print (\"0\"+$TSM2CtrlSetsNew[0]+\"1\"+$TSM2CtrlSetsNew[1]+\"2\"+$TSM2CtrlSetsNew[2]);\n\n//----------------------------------------------------------------------------------for1結束\n}\n\nstring  $TSM2CtrlSets[]=`ls -sl`;\n\n////////貳a、依目前選擇到的\"*:TSM2Controls\" 的set ,選擇其內容，並加選*:*addCtrlSet，計算選到的控制器數量並儲存到變數 。\n\nselect -r -ne $TSM2CtrlSets ;\nstring $sels[]=`ls -sl`;\nselect -cl;\nfor($sel in $sels){\n//---------------------------------------------------------------for2開始\nstring $cache[];\ntokenize $sel \":\" $cache;\nstring $search[]=`ls ($cache[0]+\":TSM2Controls\")`;\nif (`size $search `==1){select -add  ($cache[0]+\":TSM2Controls\");}\n\nstring $AddLocCtrl=($cache[0] +\":*AddLocCtrl\");\nstring $search[]=`ls $AddLocCtrl`;\nif (`size $search `>0){select -add $AddLocCtrl ;}\n//---------------------------------------------------------------for2結束\n}\n\nstring $sels[]=`ls -sl`;\nint $TSM2CtrlsAmount=`size $sels`;\n\n\n\n////////參、列印出來目前選擇的角色的\"身+臉\"控制器訊息\n\n//字串轉換\nstring $TSM2CtrlSet = stringArrayToString($TSM2CtrlSets, \"\"); //排列轉成字串\nstring $TSM2CtrlSet = substituteAllString($TSM2CtrlSet, \":TSM2Controls\", \" \");//去掉後面不要的訊息\n\nprint ($TSM2CtrlsAmount+\"身:\"+$TSM2CtrlSet) ;\n\n\n////////肆、如果什麼都沒選到就偵測沒有前置檔名的狀況\n\nstring $sels[]=`ls -sl`;\nif(`size $sels`==0){\n//-----------------------------if開始\nstring $search[]=`ls \"TSM2Controls\"`;\nif (`size $search `==1){select -add TSM2Controls ;}\n//-----------------------------if結束\n}\n")
	QselSetKeysGRP_body;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -joints 1 modelPanel1;\nmodelEditor -e -joints 1 modelPanel2;\nmodelEditor -e -joints 1 modelPanel3;\nmodelEditor -e -joints 1 modelPanel4;")
	display_joint_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("source \"byLuke/setKeyTool.mel\";\nsetKeyTool;")
	setKeyTool;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("//\ntimeSliderCopyKey;\nprint \"copyKey !!\";")
	keyCopy;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("if( `window -q -exists windowQuickRename`==1 ){\ndeleteUI  windowQuickRename ;\n}else if( `window -q -exists windowQuickRename`==0 ){\nsource \"xRig_quickRename\";\n}")
	window_reName;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("CenterPivot ;")
	centerPivot;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("FreezeTransformationsOptions ;")
	channel_FT;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -deformers 0 modelPanel1;\nmodelEditor -e -deformers 0 modelPanel2;\nmodelEditor -e -deformers 0 modelPanel3;\nmodelEditor -e -deformers 0 modelPanel4;")
	display_deformer_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("timeSliderPasteKey false;\nprint \"pasetKey !!\";")
	keyPaste;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackMoveKeys \"up\";")
	key_up;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("keyTangent -e -global -itt auto;\nkeyTangent -e -global -ott auto;")
	Animation_Polish_Mode;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("pickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\npickWalk -d up;  pickWalk -d up;  pickWalk -d up;\n\nfor ($i=0; $i<5;$i++) if(`modelPanel -ex (\"modelPanel\"+$i)`)isolateSelect -state 1 (\"modelPanel\"+$i);\n\n\n")
	display_iso_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -deformers 1 modelPanel1;\nmodelEditor -e -deformers 1 modelPanel2;\nmodelEditor -e -deformers 1 modelPanel3;\nmodelEditor -e -deformers 1 modelPanel4;")
	display_deformer_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackSpreadSqueezeTiming \"squeeze\";")
	squeeze_key;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -nurbsCurves 0 modelPanel1;\nmodelEditor -e -nurbsCurves 0 modelPanel2;\nmodelEditor -e -nurbsCurves 0 modelPanel3;\nmodelEditor -e -nurbsCurves 0 modelPanel4;\n\nmodelEditor -e -locators 0 modelPanel1;\nmodelEditor -e -locators 0 modelPanel2;\nmodelEditor -e -locators 0 modelPanel3;\nmodelEditor -e -locators 0 modelPanel4;\n\nmodelEditor -e -ikHandles 0 modelPanel1;\nmodelEditor -e -ikHandles 0 modelPanel2;\nmodelEditor -e -ikHandles 0 modelPanel3;\nmodelEditor -e -ikHandles 0 modelPanel4;\n")
	display_curveAndLocAndIKhandle_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -polymeshes 0 modelPanel1;\nmodelEditor -e -polymeshes 0 modelPanel2;\nmodelEditor -e -polymeshes 0 modelPanel3;\nmodelEditor -e -polymeshes 0 modelPanel4;")
	display_polygon_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category ""
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("source \"reference/Quick_rename_tool.mel\";\n")
	searchNreplaceNames;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("channelBoxCommand -mute;")
	channel_selMute_1;

runTimeCommand
	-label ""
	-annotation "paint weight mode"
	-longAnnotation ""
	-category "Custom Scripts.paint_weight"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("artAttrSkinPaintModePaintSelect 1 artAttrSkinPaintCtx;\n")
	pwm;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -nurbsCurves 1 modelPanel1;\nmodelEditor -e -nurbsCurves 1 modelPanel2;\nmodelEditor -e -nurbsCurves 1 modelPanel3;\nmodelEditor -e -nurbsCurves 1 modelPanel4;\n\nmodelEditor -e -locators 1 modelPanel1;\nmodelEditor -e -locators 1 modelPanel2;\nmodelEditor -e -locators 1 modelPanel3;\nmodelEditor -e -locators 1 modelPanel4;\n\nmodelEditor -e -ikHandles 1 modelPanel1;\nmodelEditor -e -ikHandles 1 modelPanel2;\nmodelEditor -e -ikHandles 1 modelPanel3;\nmodelEditor -e -ikHandles 1 modelPanel4;")
	display_curveAndLocAndIKhandle_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -joints 0 modelPanel1;\nmodelEditor -e -joints 0 modelPanel2;\nmodelEditor -e -joints 0 modelPanel3;\nmodelEditor -e -joints 0 modelPanel4;")
	display_joint_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("parentConstraint -mo -weight 1;")
	parentConstraint_matainOffset_;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackMoveKeys \"left\";")
	keyleft;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("$searches=`ls -sl`;\nif(`size $searches ` >0 ) $selsB=`ls -sl`;\nelse select -r $selsB ;\n")
	Grp_B;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackMoveKeys \"down\";")
	key_down;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("timeSliderClearKey;")
	keyDel;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("parentConstraint -weight 1;")
	parentConstraint_;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("modelEditor -e -wos 1 modelPanel1;\nmodelEditor -e -wos 1 modelPanel2;\nmodelEditor -e -wos 1 modelPanel3;\nmodelEditor -e -wos 1 modelPanel4;")
	display_wireframe_1;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("hyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\n")
	hyperShade_addSel;

runTimeCommand
	-label ""
	-annotation "把TRS鍵入預設值(0n1)"
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-command ("import maya.cmds as cmds\nsels=cmds.ls( sl=1 )\nfor sel in sels:\n  attrs=['tx','ty','tz','rx','ry','rz']\n  for attr in attrs:\n    if cmds.getAttr( sel+'.'+attr , se=1):\n      cmds.setAttr( sel+'.'+attr , 0 )\n  attrs=['sx','sy','sz']\n  for attr in attrs:\n    if cmds.getAttr( sel+'.'+attr , se=1):\n      cmds.setAttr( sel+'.'+attr , 1 )\n\n\n\n'''\n{\nstring $sel[]=`ls -sl`;\nstring $resetAttrs[]={\"translateX\",\"translateY\",\"translateZ\",\"rotateX\",\"rotateY\",\"rotateZ\"};\nfor($each in $sel)\n{\n  for($attr in $resetAttrs)\n      if (`getAttr -k ($each+\".\"+$attr)`)\n      {\n          catch(`setAttr ($each+\".\"+$attr) 0`);\n      }\n}\n\n$resetAttrs2 = {\"scaleX\",\"scaleY\",\"scaleZ\"};\nfor($each in $sel)\n{\n  for($attr in $resetAttrs2)\n      if (`getAttr -k ($each+\".\"+$attr)`)\n      {\n          catch(`setAttr ($each+\".\"+$attr) 1`);\n      }\n}\n\n}\n'''\n")
	channel_setZero;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackMoveKeys \"convergeLeft\";")
	key_convergeL;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("for ($i=0; $i<5;$i++) if(`modelPanel -ex (\"modelPanel\"+$i)`)isolateSelect -state 0 (\"modelPanel\"+$i);\n")
	display_iso_0;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("////////140122更新可列印出目前選擇的角色，並消除之前潛在的bug//////////\n//////////////////////////////\n////////選取全身與臉部控制器////////\n//////////////////////////////\n\n\n////////壹a、篩選分辨前置檔名，定義出有哪些*:TSM2Controls要用\n////一、要先偵測選到的角色(前置檔名)有無\"*:TSM2Controls\" 的set\nstring $sels[]=`ls -sl`;\nstring $TSM2CtrlSets[] ;\nclear $TSM2CtrlSets;\nfor($i=0;$i<`size $sels`;$i++){\n//----------------------------------------------------------------------------------for1開始\nif (`gmatch $sels[$i] \"*:*\"`==1){\n//--------------------------------------------------------------------if1開始\nstring $cache[];\ntokenize $sels[$i] \":\" $cache;\nselect -cl;\n//偵測,若有\"*:TSM2Controls\"這個set就選擇；\nstring $search[]=`ls ($cache[0]+\":TSM2Controls\")`;\nif (`size $search `==1){\nselect -r -ne ($cache[0]+\":TSM2Controls\");\n}\n//--------------------------------------------------------------------if1結束\n}\n\n//把目前選擇變數存入一個變數的各個位址中\nstring $nowSels[]=`ls -sl`;\nif(`size $nowSels`>0){$TSM2CtrlSets[$i]=$nowSels[0];}\n\n\n//如果某些特殊情況 沒有全身控制set，上列就會沒選到東西，該怎麼辦??\n//位址內會有空物件-->要把空的位址移除\n\n\n////執行到最後一次時把set選起來\nif($i<`size $sels`-1) continue;\n//要把空的位址移除\nstring $itemsToRemove[] = { \"\" };\nstring $TSM2CtrlSetsNew[] = stringArrayRemove($itemsToRemove, $TSM2CtrlSets );\nif(`size $TSM2CtrlSetsNew`>0){select -r -ne $TSM2CtrlSetsNew;}\n//print (\"0\"+$TSM2CtrlSetsNew[0]+\"1\"+$TSM2CtrlSetsNew[1]+\"2\"+$TSM2CtrlSetsNew[2]);\n\n//----------------------------------------------------------------------------------for1結束\n}\n\nstring  $TSM2CtrlSets[]=`ls -sl`;\n\n\n\n\n////////壹b、篩選分辨前置檔名，定義出有哪些*:faceControls要用\n////一、要先偵測選到的角色(前置檔名)有無\"*:faceControls\" 的set，若無，則自動建立\n\nstring $faceCtrlSets[] ;\nclear $faceCtrlSets;\nfor($i=0;$i<`size $sels`;$i++){\n//----------------------------------------------------------------------------------for1開始\nif (`gmatch $sels[$i] \"*:*\"`==1){\n//--------------------------------------------------------------------if1開始\nstring $cache[];\ntokenize $sels[$i] \":\" $cache;\nselect -cl;\n//偵測,若有\"*:faceControls\"這個set就選擇；\nstring $search[]=`ls ($cache[0]+\":faceControls\")`;\nif (`size $search `==1){\nselect -r -ne ($cache[0]+\":faceControls\");\n}else{\n//----------------------------------------------------------else開始\n//否則就選擇可能的表情控制器，有選到東西的話就產生\"*:faceControls\"這個set\nstring $search[]=`ls ($cache[0] +\":face_control\")`;\nif (`size $search `>0){select -add ($cache[0] +\":face_control\");}\n\nstring $search[]=`ls ($cache[0] +\":eyebrowCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":eyebrowCtrl\");}\n\nstring $search[]=`ls ($cache[0] +\":eyes\")`;\nif (`size $search `>0){select -add ($cache[0] +\":eyes\");}\nstring $search[]=`ls ($cache[0] +\":L_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":L_eye\");}\nstring $search[]=`ls ($cache[0] +\":R_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":R_eye\");}\nstring $search[]=`ls ($cache[0] +\":M_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":M_eye\");}\nstring $search[]=`ls ($cache[0] +\":U_eye\")`;\nif (`size $search `>0){select -add ($cache[0] +\":U_eye\");}\nstring $search[]=`ls ($cache[0] +\":LeyeCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":LeyeCtrl\");}\nstring $search[]=`ls ($cache[0] +\":ReyeCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":ReyeCtrl\");}\n\nstring $search[]=`ls ($cache[0] +\":mouth\")`;\nif (`size $search `>0){select -add ($cache[0] +\":mouth\");}\nstring $search[]=`ls ($cache[0] +\":mouth48\")`;\nif (`size $search `>0){select -add ($cache[0] +\":mouth48\");}\nstring $search[]=`ls ($cache[0] +\":mouthCtrl\")`;\nif (`size $search `>0){select -add ($cache[0] +\":mouthCtrl\");}\n\n//如果有選到東西才產生set\nstring $nowSels[]=`ls -sl`;\nif(`size $nowSels`>0){\n$createSetResult = `sets -name ($cache[0]+\":faceControls\") `;\nselect -r -ne ($cache[0]+\":faceControls\");\n}\n\n//----------------------------------------------------------else結束\n}\n//--------------------------------------------------------------------if1結束\n}\n\n//把目前選擇變數存入一個變數的各個位址中\nstring $nowSels[]=`ls -sl`;\nif(`size $nowSels`>0){$faceCtrlSets[$i]=$nowSels[0];}\n\n//如果是像道具 沒有臉部控制set，上列就會沒選到東西，該怎麼辦??位址內會有空物件\n//-->要把空的位址移除\n\n////執行到最後一次時把set選起來\nif($i<`size $sels`-1) continue;\n//要把空的位址移除\nstring $faceRemove[] = { \"\" };\nstring $faceCtrlSetsNew[] = stringArrayRemove($faceRemove, $faceCtrlSets );\nif(`size $faceCtrlSetsNew`>0){select -r -ne $faceCtrlSetsNew;}\n\n//----------------------------------------------------------------------------------for1結束\n}\n\nstring  $faceCtrlSets[]=`ls -sl`;\n\n\n\n\n\n////////貳a、依目前選擇到的\"*:TSM2Controls\" 的set ,選擇其內容，並加選*:*addCtrlSet，計算選到的控制器數量並儲存到變數 。\n\nselect -r -ne $TSM2CtrlSets ;\nstring $sels[]=`ls -sl`;\nselect -cl;\nfor($sel in $sels){\n//---------------------------------------------------------------for2開始\nstring $cache[];\ntokenize $sel \":\" $cache;\nstring $search[]=`ls ($cache[0]+\":TSM2Controls\")`;\nif (`size $search `==1){select -add  ($cache[0]+\":TSM2Controls\");}\n\nstring $AddLocCtrl=($cache[0] +\":*AddLocCtrl\");\nstring $search[]=`ls $AddLocCtrl`;\nif (`size $search `>0){select -add $AddLocCtrl ;}\n//---------------------------------------------------------------for2結束\n}\n\nstring $sels[]=`ls -sl`;\nint $TSM2CtrlsAmount=`size $sels`;\n\n\n////////貳b、依目前選擇到的\"*:faceControls\" 的set ,選擇其內容。\nselect -add $faceCtrlSets ;\n\nstring $sels[]=`ls -sl`;\nint $faceCtrlsAmount=`size $sels`-$TSM2CtrlsAmount;\n\n\n\n////////參、列印出來目前選擇的角色的\"身+臉\"控制器訊息\n\n//字串轉換\nstring $TSM2CtrlSet = stringArrayToString($TSM2CtrlSets, \"\"); //排列轉成字串\nstring $TSM2CtrlSet = substituteAllString($TSM2CtrlSet, \":TSM2Controls\", \" \");//去掉後面不要的訊息\n\nstring $faceCtrlSet = stringArrayToString($faceCtrlSets, \"\"); //排列轉成字串\nstring $faceCtrlSet = substituteAllString($faceCtrlSet, \":faceControls\", \" \");//去掉後面不要的訊息\n\nprint ($TSM2CtrlsAmount+\"身:\"+$TSM2CtrlSet +\"   ;   \"+$faceCtrlsAmount+\"臉:\"+$faceCtrlSet) ;\n//應該印出 身+臉 ; 僅身 ; 僅臉\n\n\n////////肆、如果什麼都沒選到就偵測沒有前置檔名的狀況\n\nstring $sels[]=`ls -sl`;\nif(`size $sels`==0){\n//-----------------------------if開始\nstring $search[]=`ls \"TSM2Controls\"`;\nif (`size $search `==1){select -add TSM2Controls ;}\n\nstring $search[]=`ls \"faceControls\"`;\nif (`size $search `==1){select -add faceControls ;}\n//-----------------------------if結束\n}\n")
	QselSetKeysGRP_bodyAndFace;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackSpreadSqueezeTiming \"spread\";")
	spreed_key;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Ack_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("ackMoveKeys \"right\";")
	key_right;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("channelBoxCommand -unlock;")
	channel_selLock_0;

runTimeCommand
	-label ""
	-annotation "select vertex mode"
	-longAnnotation ""
	-category "Custom Scripts.paint_weight"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("artAttrSkinPaintModePaintSelect 0 artAttrSkinPaintCtx;\n")
	svm;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Akai"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("CreateSetOptions;")
	sets_creatSet;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("filterUISelectAttributesCheckbox rotateX 1 graphEditor1OutlineEd;")
	selectAttributesSwitchRX;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("filterUISelectAttributesCheckbox rotateX 0 graphEditor1OutlineEd;\nfilterUISelectAttributesCheckbox translateX 0 graphEditor1OutlineEd;\nfilterUISelectAttributesCheckbox rotateY 0 graphEditor1OutlineEd;\nfilterUISelectAttributesCheckbox translateY 0 graphEditor1OutlineEd;\nfilterUISelectAttributesCheckbox rotateZ 0 graphEditor1OutlineEd;\nfilterUISelectAttributesCheckbox translateZ 0 graphEditor1OutlineEd;")
	selectAttributesOff;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("filterUISelectAttributesCheckbox rotateY 1 graphEditor1OutlineEd;")
	selectAttributesSwitchRY;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("filterUISelectAttributesCheckbox rotateZ 1 graphEditor1OutlineEd;")
	selectAttributesSwitchRZ;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("filterUISelectAttributesCheckbox translateY 1 graphEditor1OutlineEd;")
	selectAttributesSwitchTY;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("filterUISelectAttributesCheckbox translateZ 1 graphEditor1OutlineEd;")
	selectAttributesSwitchTZ;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("filterUISelectAttributesCheckbox translateX 1 graphEditor1OutlineEd;")
	selectAttributesSwitchTX;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke_tool"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("source \"byLuke/IKFKswitchTool\";\nIKFKswitchToolbyLuke();")
	IKFK;

runTimeCommand
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("int $isBreakdown=(1-$isBreakdown);\n\nkeyframe -breakdown $isBreakdown;")
	setBreakDown;

runTimeCommand
	-label ""
	-annotation "reOpen scens"
	-longAnnotation ""
	-category "Custom Scripts.Luke"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("$sn = `file -q -sn`;\nif(`gmatch $sn \"*_export.*\"`)$sn =`substitute \"_export.\" $sn \".\"`;\nfile -f -new;\nfile -open $sn;")
	reOpenSn;

runTimeCommand
	-label ""
	-annotation "Print the word \"Hello\""
	-longAnnotation ""
	-category ""
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("print \"Hello\\n\"")
	MyHelloCommand;

